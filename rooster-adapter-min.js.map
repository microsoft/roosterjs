{"version":3,"file":"rooster-adapter-min.js","mappings":"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","sources":["webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/corePlugins/BridgePlugin.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/corePlugins/EditPlugin.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/DarkColorHandlerImpl.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/EditorAdapter.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/IgnoredPluginNames.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/utils/buildRangeEx.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/utils/createTableRanges.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/utils/eventConverter.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/utils/insertNode.ts","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/editor/utils/selectionConverter.ts","webpack://roosterjsAdapter/external var \"roosterjs\"","webpack://roosterjsAdapter/external var \"roosterjsLegacy\"","webpack://roosterjsAdapter/./node_modules/tslib/tslib.es6.mjs","webpack://roosterjsAdapter/webpack/bootstrap","webpack://roosterjsAdapter/webpack/runtime/define property getters","webpack://roosterjsAdapter/webpack/runtime/hasOwnProperty shorthand","webpack://roosterjsAdapter/webpack/runtime/make namespace object","webpack://roosterjsAdapter/./packages/roosterjs-editor-adapter/lib/index.ts"],"sourcesContent":["import { cacheGetEventData } from 'roosterjs-content-model-dom';\nimport { createDarkColorHandler } from '../editor/DarkColorHandlerImpl';\nimport { createEditPlugin } from './EditPlugin';\nimport { IgnoredPluginNames } from '../editor/IgnoredPluginNames';\nimport { newEventToOldEvent, oldEventToNewEvent } from '../editor/utils/eventConverter';\nimport type {\n    EditorPlugin as LegacyEditorPlugin,\n    ContextMenuProvider as LegacyContextMenuProvider,\n    IEditor as ILegacyEditor,\n    ExperimentalFeatures,\n    SizeTransformer,\n    EditPluginState,\n    CustomData,\n    DarkColorHandler,\n} from 'roosterjs-editor-types';\nimport type { ContextMenuProvider, IEditor, PluginEvent } from 'roosterjs-content-model-types';\n\nconst ExclusivelyHandleEventPluginKey = '__ExclusivelyHandleEventPlugin';\nconst OldEventKey = '__OldEventFromNewEvent';\n\n/**\n * @internal\n * Represents the core data structure of a editor adapter\n */\nexport interface EditorAdapterCore {\n    /**\n     * Custom data of this editor\n     */\n    readonly customData: Record<string, CustomData>;\n\n    /**\n     * Enabled experimental features\n     */\n    readonly experimentalFeatures: ExperimentalFeatures[];\n\n    /**\n     * Dark model handler for the editor, used for variable-based solution.\n     * If keep it null, editor will still use original dataset-based dark mode solution.\n     */\n    readonly darkColorHandler: DarkColorHandler;\n\n    /**\n     * Plugin state of EditPlugin\n     */\n    readonly edit: EditPluginState;\n\n    /**\n     * Context Menu providers\n     */\n    readonly contextMenuProviders: LegacyContextMenuProvider<any>[];\n\n    /**\n     * @deprecated Use zoomScale instead\n     */\n    readonly sizeTransformer: SizeTransformer;\n}\n\n/**\n * @internal\n * Act as a bridge between Standalone editor and Content Model editor, translate Standalone editor event type to legacy event type\n */\nexport class BridgePlugin implements ContextMenuProvider<any> {\n    private legacyPlugins: LegacyEditorPlugin[];\n    private edit: EditPluginState;\n    private contextMenuProviders: LegacyContextMenuProvider<any>[];\n    private checkExclusivelyHandling: boolean;\n\n    constructor(\n        private onInitialize: (core: EditorAdapterCore) => ILegacyEditor,\n        legacyPlugins: LegacyEditorPlugin[] = [],\n        private experimentalFeatures: string[] = []\n    ) {\n        const editPlugin = createEditPlugin();\n\n        this.legacyPlugins = [\n            editPlugin,\n            ...legacyPlugins.filter(x => !!x && IgnoredPluginNames.indexOf(x.getName()) < 0),\n        ];\n        this.edit = editPlugin.getState();\n        this.contextMenuProviders = this.legacyPlugins.filter(isContextMenuProvider);\n        this.checkExclusivelyHandling = this.legacyPlugins.some(\n            plugin => plugin.willHandleEventExclusively\n        );\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Bridge';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        const outerEditor = this.onInitialize(this.createEditorCore(editor));\n\n        this.legacyPlugins.forEach(plugin => plugin.initialize(outerEditor));\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        for (let i = this.legacyPlugins.length - 1; i >= 0; i--) {\n            const plugin = this.legacyPlugins[i];\n\n            plugin.dispose();\n        }\n    }\n\n    willHandleEventExclusively(event: PluginEvent) {\n        return this.checkExclusivelyHandling && !!this.cacheGetExclusivelyHandlePlugin(event);\n    }\n\n    onPluginEvent(event: PluginEvent) {\n        const oldEvent = this.cacheGetOldEvent(event);\n\n        if (oldEvent) {\n            const exclusivelyHandleEventPlugin = this.cacheGetExclusivelyHandlePlugin(event);\n\n            if (exclusivelyHandleEventPlugin) {\n                exclusivelyHandleEventPlugin.onPluginEvent?.(oldEvent);\n            } else {\n                this.legacyPlugins.forEach(plugin => plugin.onPluginEvent?.(oldEvent));\n            }\n\n            Object.assign(event, oldEventToNewEvent(oldEvent, event));\n        }\n    }\n\n    /**\n     * A callback to return context menu items\n     * @param target Target node that triggered a ContextMenu event\n     * @returns An array of context menu items, or null means no items needed\n     */\n    getContextMenuItems(target: Node): any[] {\n        const allItems: any[] = [];\n\n        this.contextMenuProviders.forEach(provider => {\n            const items = provider.getContextMenuItems(target) ?? [];\n            if (items?.length > 0) {\n                if (allItems.length > 0) {\n                    allItems.push(null);\n                }\n\n                allItems.push(...items);\n            }\n        });\n\n        return allItems;\n    }\n\n    private cacheGetExclusivelyHandlePlugin(event: PluginEvent) {\n        return cacheGetEventData(event, ExclusivelyHandleEventPluginKey, event => {\n            const oldEvent = this.cacheGetOldEvent(event);\n\n            if (oldEvent) {\n                for (let i = 0; i < this.legacyPlugins.length; i++) {\n                    const plugin = this.legacyPlugins[i];\n\n                    if (plugin.willHandleEventExclusively?.(oldEvent)) {\n                        return plugin;\n                    }\n                }\n            }\n\n            return null;\n        });\n    }\n\n    private cacheGetOldEvent(event: PluginEvent) {\n        return cacheGetEventData(event, OldEventKey, newEventToOldEvent);\n    }\n\n    private createEditorCore(editor: IEditor): EditorAdapterCore {\n        return {\n            customData: {},\n            experimentalFeatures: (this.experimentalFeatures as ExperimentalFeatures[]) ?? [],\n            sizeTransformer: createSizeTransformer(editor),\n            darkColorHandler: createDarkColorHandler(editor.getColorManager()),\n            edit: this.edit,\n            contextMenuProviders: this.contextMenuProviders,\n        };\n    }\n}\n\n/**\n * @internal Export for test only. This function is only used for compatibility from older build\n\n */\nexport function createSizeTransformer(editor: IEditor): SizeTransformer {\n    return size => size / editor.getDOMHelper().calculateZoomScale();\n}\n\nfunction isContextMenuProvider(\n    source: LegacyEditorPlugin\n): source is LegacyContextMenuProvider<any> {\n    return !!(<LegacyContextMenuProvider<any>>source)?.getContextMenuItems;\n}\n","import { isCtrlOrMetaPressed } from 'roosterjs-editor-dom';\nimport { Keys, PluginEventType } from 'roosterjs-editor-types';\nimport type {\n    EditPluginState,\n    GenericContentEditFeature,\n    IEditor,\n    PluginEvent,\n    PluginWithState,\n} from 'roosterjs-editor-types';\n\n/**\n * Edit Component helps handle Content edit features\n */\nclass EditPlugin implements PluginWithState<EditPluginState> {\n    private editor: IEditor | null = null;\n    private state: EditPluginState;\n\n    /**\n     * Construct a new instance of EditPlugin\n     * @param options The editor options\n     */\n    constructor() {\n        this.state = {\n            features: {},\n        };\n    }\n\n    /**\n     * Get a friendly name of  this plugin\n     */\n    getName() {\n        return 'Edit';\n    }\n\n    /**\n     * Initialize this plugin. This should only be called from Editor\n     * @param editor Editor instance\n     */\n    initialize(editor: IEditor) {\n        this.editor = editor;\n    }\n\n    /**\n     * Dispose this plugin\n     */\n    dispose() {\n        this.editor = null;\n    }\n\n    /**\n     * Get plugin state object\n     */\n    getState() {\n        return this.state;\n    }\n\n    /**\n     * Handle events triggered from editor\n     * @param event PluginEvent object\n     */\n    onPluginEvent(event: PluginEvent) {\n        let hasFunctionKey = false;\n        let features: GenericContentEditFeature<PluginEvent>[] | null = null;\n        let ctrlOrMeta = false;\n        const isKeyDownEvent = event.eventType == PluginEventType.KeyDown;\n\n        if (isKeyDownEvent) {\n            const rawEvent = event.rawEvent;\n            const range = this.editor?.getSelectionRange();\n\n            ctrlOrMeta = isCtrlOrMetaPressed(rawEvent);\n            hasFunctionKey = ctrlOrMeta || rawEvent.altKey;\n            features =\n                this.state.features[rawEvent.which] ||\n                (range && !range.collapsed && this.state.features[Keys.RANGE]);\n        } else if (event.eventType == PluginEventType.ContentChanged) {\n            features = this.state.features[Keys.CONTENTCHANGED];\n        }\n\n        for (let i = 0; features && i < features?.length; i++) {\n            const feature = features[i];\n            if (\n                (feature.allowFunctionKeys || !hasFunctionKey) &&\n                this.editor &&\n                feature.shouldHandleEvent(event, this.editor, ctrlOrMeta)\n            ) {\n                feature.handleEvent(event, this.editor);\n                if (isKeyDownEvent) {\n                    event.handledByEditFeature = true;\n                }\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @internal\n * Create a new instance of EditPlugin.\n */\nexport function createEditPlugin(): PluginWithState<EditPluginState> {\n    return new EditPlugin();\n}\n","import { getColor, getObjectKeys, parseColor, setColor } from 'roosterjs-content-model-dom';\nimport type { ColorKeyAndValue, DarkColorHandler } from 'roosterjs-editor-types';\nimport type { DarkColorHandler as StandaloneDarkColorHandler } from 'roosterjs-content-model-types';\n\nconst VARIABLE_REGEX = /^\\s*var\\(\\s*(\\-\\-[a-zA-Z0-9\\-_]+)\\s*(?:,\\s*(.*))?\\)\\s*$/;\nconst VARIABLE_PREFIX = 'var(';\nconst COLOR_VAR_PREFIX = 'darkColor';\n\nclass DarkColorHandlerImpl implements DarkColorHandler {\n    constructor(private innerHandler: StandaloneDarkColorHandler) {}\n\n    /**\n     * Get a copy of known colors\n     * @returns\n     */\n    getKnownColorsCopy() {\n        return Object.values(this.innerHandler.knownColors);\n    }\n\n    /**\n     * Given a light mode color value and an optional dark mode color value, register this color\n     * so that editor can handle it, then return the CSS color value for current color mode.\n     * @param lightModeColor Light mode color value\n     * @param isDarkMode Whether current color mode is dark mode\n     * @param darkModeColor Optional dark mode color value. If not passed, we will calculate one.\n     */\n    registerColor(lightModeColor: string, isDarkMode: boolean, darkModeColor?: string): string {\n        const parsedColor = this.parseColorValue(lightModeColor);\n        let colorKey: string | undefined;\n\n        if (parsedColor) {\n            lightModeColor = parsedColor.lightModeColor;\n            darkModeColor = parsedColor.darkModeColor || darkModeColor;\n            colorKey = parsedColor.key;\n        }\n\n        if (isDarkMode && lightModeColor) {\n            colorKey =\n                colorKey || `--${COLOR_VAR_PREFIX}_${lightModeColor.replace(/[^\\d\\w]/g, '_')}`;\n\n            this.innerHandler.updateKnownColor(isDarkMode, colorKey, {\n                lightModeColor,\n                darkModeColor: darkModeColor || this.innerHandler.getDarkColor(lightModeColor),\n            });\n\n            return `var(${colorKey}, ${lightModeColor})`;\n        } else {\n            return lightModeColor;\n        }\n    }\n\n    /**\n     * Reset known color record, clean up registered color variables.\n     */\n    reset(): void {\n        this.innerHandler.reset();\n    }\n\n    /**\n     * Parse an existing color value, if it is in variable-based color format, extract color key,\n     * light color and query related dark color if any\n     * @param color The color string to parse\n     * @param isInDarkMode Whether current content is in dark mode. When set to true, if the color value is not in dark var format,\n     * we will treat is as a dark mode color and try to find a matched dark mode color.\n     */\n    parseColorValue(color: string | undefined | null, isInDarkMode?: boolean): ColorKeyAndValue {\n        let key: string | undefined;\n        let lightModeColor = '';\n        let darkModeColor: string | undefined;\n\n        if (color) {\n            const match = color.startsWith(VARIABLE_PREFIX) ? VARIABLE_REGEX.exec(color) : null;\n\n            if (match) {\n                if (match[2]) {\n                    key = match[1];\n                    lightModeColor = match[2];\n                    darkModeColor = this.innerHandler.knownColors[key]?.darkModeColor;\n                } else {\n                    lightModeColor = '';\n                }\n            } else if (isInDarkMode) {\n                // If editor is in dark mode but the color is not in dark color format, it is possible the color was inserted from external code\n                // without any light color info. So we first try to see if there is a known dark color can match this color, and use its related\n                // light color as light mode color. Otherwise we need to drop this color to avoid show \"white on white\" content.\n                lightModeColor = this.findLightColorFromDarkColor(color) || '';\n\n                if (lightModeColor) {\n                    darkModeColor = color;\n                }\n            } else {\n                lightModeColor = color;\n            }\n        }\n\n        return { key, lightModeColor, darkModeColor };\n    }\n\n    /**\n     * Find related light mode color from dark mode color.\n     * @param darkColor The existing dark color\n     */\n    findLightColorFromDarkColor(darkColor: string): string | null {\n        const rgbSearch = parseColor(darkColor);\n        const knownColors = this.innerHandler.knownColors;\n\n        if (rgbSearch) {\n            const key = getObjectKeys(knownColors).find(key => {\n                const rgbCurrent = parseColor(knownColors[key].darkModeColor);\n\n                return (\n                    rgbCurrent &&\n                    rgbCurrent[0] == rgbSearch[0] &&\n                    rgbCurrent[1] == rgbSearch[1] &&\n                    rgbCurrent[2] == rgbSearch[2]\n                );\n            });\n\n            if (key) {\n                return knownColors[key].lightModeColor;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Transform element color, from dark to light or from light to dark\n     * @param element The element to transform color\n     * @param fromDarkMode Whether this is transforming color from dark mode\n     * @param toDarkMode Whether this is transforming color to dark mode\n     */\n    transformElementColor(element: HTMLElement, fromDarkMode: boolean, toDarkMode: boolean): void {\n        const textColor = getColor(element, false /*isBackground*/, !toDarkMode, this.innerHandler);\n        const backColor = getColor(element, true /*isBackground*/, !toDarkMode, this.innerHandler);\n\n        setColor(element, textColor, false /*isBackground*/, toDarkMode, this.innerHandler);\n        setColor(element, backColor, true /*isBackground*/, toDarkMode, this.innerHandler);\n    }\n}\n\n/**\n * @internal\n */\nexport function createDarkColorHandler(innerHandler: StandaloneDarkColorHandler): DarkColorHandler {\n    return new DarkColorHandlerImpl(innerHandler);\n}\n","import { BridgePlugin } from '../corePlugins/BridgePlugin';\nimport { buildRangeEx } from './utils/buildRangeEx';\nimport { insertNode } from './utils/insertNode';\nimport {\n    getObjectKeys,\n    isBold,\n    retrieveModelFormatState,\n    transformColor,\n} from 'roosterjs-content-model-dom';\nimport type { EditorAdapterCore } from '../corePlugins/BridgePlugin';\nimport {\n    newEventToOldEvent,\n    oldEventToNewEvent,\n    OldEventTypeToNewEventType,\n} from './utils/eventConverter';\nimport {\n    createModelFromHtml,\n    exportContent,\n    redo,\n    Editor,\n    undo,\n    paste,\n} from 'roosterjs-content-model-core';\nimport {\n    ChangeSource,\n    ColorTransformDirection,\n    ContentPosition,\n    GetContentMode,\n    PluginEventType,\n    QueryScope,\n    RegionType,\n} from 'roosterjs-editor-types';\nimport type {\n    BlockElement,\n    ClipboardData,\n    ContentChangedData,\n    ContentChangedEvent,\n    DOMEventHandler,\n    DefaultFormat,\n    EditorUndoState,\n    ExperimentalFeatures,\n    GenericContentEditFeature,\n    IContentTraverser,\n    IPositionContentSearcher,\n    InsertOption,\n    NodePosition,\n    PendableFormatState,\n    PluginEvent,\n    PluginEventData,\n    PluginEventFromType,\n    PositionType,\n    Region,\n    SelectionPath,\n    SelectionRangeEx,\n    SizeTransformer,\n    StyleBasedFormatState,\n    TableSelection,\n    DOMEventHandlerObject,\n    DarkColorHandler,\n    IEditor as ILegacyEditor,\n} from 'roosterjs-editor-types';\nimport {\n    convertDomSelectionToRangeEx,\n    convertRangeExToDomSelection,\n} from './utils/selectionConverter';\nimport type {\n    CompatibleChangeSource,\n    CompatibleColorTransformDirection,\n    CompatibleContentPosition,\n    CompatibleExperimentalFeatures,\n    CompatibleGetContentMode,\n    CompatiblePluginEventType,\n    CompatibleQueryScope,\n    CompatibleRegionType,\n} from 'roosterjs-editor-types/lib/compatibleTypes';\nimport {\n    ContentTraverser,\n    Position,\n    PositionContentSearcher,\n    cacheGetEventData,\n    collapseNodes,\n    contains,\n    deleteSelectedContent,\n    getBlockElementAtNode,\n    getRegionsFromRange,\n    getSelectionPath,\n    isNodeEmpty,\n    isPositionAtBeginningOf,\n    queryElements,\n    toArray,\n    wrap,\n} from 'roosterjs-editor-dom';\nimport type { EditorAdapterOptions } from '../publicTypes/EditorAdapterOptions';\nimport type {\n    ContentModelFormatState,\n    DOMEventRecord,\n    ExportContentMode,\n    IEditor,\n    EditorOptions,\n} from 'roosterjs-content-model-types';\n\nconst GetContentModeMap: Record<GetContentMode, ExportContentMode> = {\n    [GetContentMode.CleanHTML]: 'HTML',\n    [GetContentMode.PlainText]: 'PlainText',\n    [GetContentMode.PlainTextFast]: 'PlainTextFast',\n    [GetContentMode.RawHTMLOnly]: 'HTML',\n    [GetContentMode.RawHTMLWithSelection]: 'HTML',\n};\n\n/**\n * Editor for Content Model.\n */\nexport class EditorAdapter extends Editor implements ILegacyEditor {\n    private contentModelEditorCore: EditorAdapterCore | undefined;\n\n    /**\n     * Creates an instance of Editor\n     * @param contentDiv The DIV HTML element which will be the container element of editor\n     * @param options An optional options object to customize the editor\n     */\n    constructor(contentDiv: HTMLDivElement, options: EditorAdapterOptions = {}) {\n        const bridgePlugin = new BridgePlugin(\n            core => {\n                this.contentModelEditorCore = core;\n\n                return this;\n            },\n            options.legacyPlugins,\n            options.experimentalFeatures\n        );\n\n        const plugins = [bridgePlugin, ...(options.plugins ?? [])];\n        const initContent = options.initialContent ?? contentDiv.innerHTML;\n        const initialModel =\n            initContent && !options.initialModel\n                ? createModelFromHtml(\n                      initContent,\n                      options.defaultDomToModelOptions,\n                      options.trustedHTMLHandler,\n                      options.defaultSegmentFormat\n                  )\n                : options.initialModel;\n        const standaloneEditorOptions: EditorOptions = {\n            ...options,\n            plugins,\n            initialModel,\n        };\n\n        super(contentDiv, standaloneEditorOptions);\n    }\n\n    /**\n     * Dispose this editor, dispose all plugins and custom data\n     */\n    dispose(): void {\n        super.dispose();\n\n        const core = this.contentModelEditorCore;\n\n        if (core) {\n            getObjectKeys(core.customData).forEach(key => {\n                const data = core.customData[key];\n\n                if (data && data.disposer) {\n                    data.disposer(data.value);\n                }\n\n                delete core.customData[key];\n            });\n\n            this.contentModelEditorCore = undefined;\n        }\n    }\n\n    /**\n     * Get whether this editor is disposed\n     * @returns True if editor is disposed, otherwise false\n     */\n    isDisposed(): boolean {\n        return super.isDisposed() || !this.contentModelEditorCore;\n    }\n\n    /**\n     * Insert node into editor\n     * @param node The node to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     * @returns true if node is inserted. Otherwise false\n     */\n    insertNode(node: Node, option?: InsertOption): boolean {\n        if (node) {\n            option = option || {\n                position: ContentPosition.SelectionStart,\n                insertOnNewLine: false,\n                updateCursor: true,\n                replaceSelection: true,\n                insertToRegionRoot: false,\n            };\n\n            const { physicalRoot } = this.getCore();\n\n            if (option.updateCursor) {\n                this.focus();\n            }\n\n            if (option.position == ContentPosition.Outside) {\n                physicalRoot.parentNode?.insertBefore(node, physicalRoot.nextSibling);\n            } else {\n                if (this.isDarkMode()) {\n                    transformColor(\n                        node,\n                        true /*includeSelf*/,\n                        'lightToDark',\n                        this.getColorManager()\n                    );\n                }\n\n                const selection = insertNode(physicalRoot, this.getDOMSelection(), node, option);\n\n                if (selection && option.updateCursor) {\n                    this.setDOMSelection(selection);\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Delete a node from editor content\n     * @param node The node to delete\n     * @returns true if node is deleted. Otherwise false\n     */\n    deleteNode(node: Node): boolean {\n        // Only remove the node when it falls within editor\n        if (node && this.contains(node) && node.parentNode) {\n            node.parentNode.removeChild(node);\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Replace a node in editor content with another node\n     * @param existingNode The existing node to be replaced\n     * @param toNode node to replace to\n     * @param transformColorForDarkMode (optional) Whether to transform new node to dark mode. Default is false\n     * @returns true if node is replaced. Otherwise false\n     */\n    replaceNode(existingNode: Node, toNode: Node, transformColorForDarkMode?: boolean): boolean {\n        const core = this.getCore();\n        // Only replace the node when it falls within editor\n        if (this.contains(existingNode) && toNode) {\n            if (core.lifecycle.isDarkMode && transformColorForDarkMode) {\n                this.transformToDarkColor(toNode, ColorTransformDirection.LightToDark);\n            }\n\n            existingNode.parentNode?.replaceChild(toNode, existingNode);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Get BlockElement at given node\n     * @param node The node to create InlineElement\n     * @returns The BlockElement result\n     */\n    getBlockElementAtNode(node: Node): BlockElement | null {\n        return getBlockElementAtNode(this.getCore().logicalRoot, node);\n    }\n\n    contains(arg: Node | Range | null): boolean {\n        if (!arg) {\n            return false;\n        }\n        return contains(this.getCore().logicalRoot, <Node>arg);\n    }\n\n    queryElements(\n        selector: string,\n        scopeOrCallback:\n            | QueryScope\n            | CompatibleQueryScope\n            | ((node: Node) => any) = QueryScope.Body,\n        callback?: (node: Node) => any\n    ) {\n        const core = this.getCore();\n        const result: HTMLElement[] = [];\n        const scope = scopeOrCallback instanceof Function ? QueryScope.Body : scopeOrCallback;\n        callback = scopeOrCallback instanceof Function ? scopeOrCallback : callback;\n\n        const selectionEx = scope == QueryScope.Body ? null : this.getSelectionRangeEx();\n        if (selectionEx) {\n            selectionEx.ranges.forEach(range => {\n                result.push(...queryElements(core.logicalRoot, selector, callback, scope, range));\n            });\n        } else {\n            return queryElements(\n                core.logicalRoot,\n                selector,\n                callback,\n                scope,\n                undefined /* range */\n            );\n        }\n\n        return result;\n    }\n\n    /**\n     * Collapse nodes within the given start and end nodes to their common ancestor node,\n     * split parent nodes if necessary\n     * @param start The start node\n     * @param end The end node\n     * @param canSplitParent True to allow split parent node there are nodes before start or after end under the same parent\n     * and the returned nodes will be all nodes from start through end after splitting\n     * False to disallow split parent\n     * @returns When canSplitParent is true, returns all node from start through end after splitting,\n     * otherwise just return start and end\n     */\n    collapseNodes(start: Node, end: Node, canSplitParent: boolean): Node[] {\n        return collapseNodes(this.getCore().physicalRoot, start, end, canSplitParent);\n    }\n\n    //#endregion\n\n    //#region Content API\n\n    /**\n     * Check whether the editor contains any visible content\n     * @param trim Whether trim the content string before check. Default is false\n     * @returns True if there's no visible content, otherwise false\n     */\n    isEmpty(trim?: boolean): boolean {\n        return isNodeEmpty(this.getCore().physicalRoot, trim);\n    }\n\n    /**\n     * Get current editor content as HTML string\n     * @param mode specify what kind of HTML content to retrieve\n     * @returns HTML string representing current editor content\n     */\n    getContent(mode: GetContentMode | CompatibleGetContentMode = GetContentMode.CleanHTML): string {\n        const exportMode = GetContentModeMap[mode] ?? 'HTML';\n\n        switch (exportMode) {\n            case 'HTML':\n                return exportContent(\n                    this,\n                    'HTML',\n                    this.getCore().environment.modelToDomSettings.customized\n                );\n\n            case 'PlainText':\n                return exportContent(this, 'PlainText');\n\n            case 'PlainTextFast':\n                return exportContent(this, 'PlainTextFast');\n        }\n    }\n\n    /**\n     * Set HTML content to this editor. All existing content will be replaced. A ContentChanged event will be triggered\n     * @param content HTML content to set in\n     * @param triggerContentChangedEvent True to trigger a ContentChanged event. Default value is true\n     */\n    setContent(content: string, triggerContentChangedEvent: boolean = true) {\n        const core = this.getCore();\n        const { physicalRoot, api, trustedHTMLHandler, lifecycle, darkColorHandler } = core;\n\n        api.triggerEvent(\n            core,\n            {\n                eventType: 'beforeSetContent',\n                newContent: content,\n            },\n            true /*broadcast*/\n        );\n\n        const newModel = createModelFromHtml(\n            content,\n            core.environment.domToModelSettings.customized,\n            trustedHTMLHandler,\n            core.format.defaultFormat\n        );\n\n        api.setContentModel(core, newModel);\n\n        if (triggerContentChangedEvent) {\n            api.triggerEvent(\n                core,\n                {\n                    eventType: 'contentChanged',\n                    source: ChangeSource.SetContent,\n                },\n                false /*broadcast*/\n            );\n        } else if (lifecycle.isDarkMode) {\n            transformColor(physicalRoot, false /*includeSelf*/, 'lightToDark', darkColorHandler);\n        }\n    }\n\n    /**\n     * Insert HTML content into editor\n     * @param HTML content to insert\n     * @param option Insert options. Default value is:\n     *  position: ContentPosition.SelectionStart\n     *  updateCursor: true\n     *  replaceSelection: true\n     *  insertOnNewLine: false\n     */\n    insertContent(content: string, option?: InsertOption) {\n        if (content) {\n            const doc = this.getDocument();\n            const body = new DOMParser().parseFromString(\n                this.getCore().trustedHTMLHandler(content),\n                'text/html'\n            )?.body;\n            let allNodes = body?.childNodes ? toArray(body.childNodes) : [];\n\n            // If it is to insert on new line, and there are more than one node in the collection, wrap all nodes with\n            // a parent DIV before calling insertNode on each top level sub node. Otherwise, every sub node may get wrapped\n            // separately to show up on its own line\n            if (option && option.insertOnNewLine && allNodes.length > 1) {\n                allNodes = [wrap(allNodes)];\n            }\n\n            const fragment = doc.createDocumentFragment();\n            allNodes.forEach(node => fragment.appendChild(node));\n\n            this.insertNode(fragment, option);\n        }\n    }\n\n    /**\n     * Delete selected content\n     */\n    deleteSelectedContent(): NodePosition | null {\n        const range = this.getSelectionRange();\n        if (range && !range.collapsed) {\n            return deleteSelectedContent(this.getCore().physicalRoot, range);\n        }\n        return null;\n    }\n\n    /**\n     * Paste into editor using a clipboardData object\n     * @param clipboardData Clipboard data retrieved from clipboard\n     * @param pasteAsText Force pasting as plain text. Default value is false\n     * @param applyCurrentStyle True if apply format of current selection to the pasted content,\n     * false to keep original format.  Default value is false. When pasteAsText is true, this parameter is ignored\n     * @param pasteAsImage: When set to true, if the clipboardData contains a imageDataUri will paste the image to the editor\n     */\n    paste(\n        clipboardData: ClipboardData,\n        pasteAsText: boolean = false,\n        applyCurrentFormat: boolean = false,\n        pasteAsImage: boolean = false\n    ) {\n        paste(\n            this,\n            clipboardData,\n            pasteAsText\n                ? 'asPlainText'\n                : applyCurrentFormat\n                ? 'mergeFormat'\n                : pasteAsImage\n                ? 'asImage'\n                : 'normal'\n        );\n    }\n\n    //#endregion\n\n    //#region Focus and Selection\n\n    /**\n     * Get current selection range from Editor.\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now.\n     * Default value is true\n     * @returns current selection range, or null if editor never got focus before\n     */\n    getSelectionRange(tryGetFromCache: boolean = true): Range | null {\n        const selection = this.getDOMSelection();\n\n        return selection?.type == 'range' ? selection.range : null;\n    }\n\n    /**\n     * Get current selection range from Editor.\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @param tryGetFromCache Set to true to retrieve the selection range from cache if editor doesn't own the focus now.\n     * Default value is true\n     * @returns current selection range, or null if editor never got focus before\n     */\n    getSelectionRangeEx(): SelectionRangeEx {\n        const selection = this.getDOMSelection();\n\n        return convertDomSelectionToRangeEx(selection);\n    }\n\n    /**\n     * Get current selection in a serializable format\n     * It does a live pull on the selection, if nothing retrieved, return whatever we have in cache.\n     * @returns current selection path, or null if editor never got focus before\n     */\n    getSelectionPath(): SelectionPath | null {\n        const range = this.getSelectionRange();\n        return range && getSelectionPath(this.getCore().physicalRoot, range);\n    }\n\n    select(\n        arg1: Range | SelectionRangeEx | NodePosition | Node | SelectionPath | null,\n        arg2?: NodePosition | number | PositionType | TableSelection | null,\n        arg3?: Node,\n        arg4?: number | PositionType\n    ): boolean {\n        const core = this.getCore();\n        const rangeEx = buildRangeEx(core.physicalRoot, arg1, arg2, arg3, arg4);\n        const selection = convertRangeExToDomSelection(rangeEx);\n\n        this.setDOMSelection(selection);\n        return true;\n    }\n\n    /**\n     * Get current focused position. Return null if editor doesn't have focus at this time.\n     */\n    getFocusedPosition(): NodePosition | null {\n        const sel = this.getDocument().defaultView?.getSelection();\n        if (sel?.focusNode && this.contains(sel.focusNode)) {\n            return new Position(sel.focusNode, sel.focusOffset);\n        }\n\n        const range = this.getSelectionRange();\n        if (range) {\n            return Position.getStart(range);\n        }\n\n        return null;\n    }\n\n    /**\n     * Get an HTML element from current cursor position.\n     * When expectedTags is not specified, return value is the current node (if it is HTML element)\n     * or its parent node (if current node is a Text node).\n     * When expectedTags is specified, return value is the first ancestor of current node which has\n     * one of the expected tags.\n     * If no element found within editor by the given tag, return null.\n     * @param selector Optional, an HTML selector to find HTML element with.\n     * @param startFrom Start search from this node. If not specified, start from current focused position\n     * @param event Optional, if specified, editor will try to get cached result from the event object first.\n     * If it is not cached before, query from DOM and cache the result into the event object\n     */\n    getElementAtCursor(\n        selector?: string,\n        startFrom?: Node,\n        event?: PluginEvent\n    ): HTMLElement | null {\n        event = startFrom ? undefined : event; // Only use cache when startFrom is not specified, for different start position can have different result\n\n        return (\n            cacheGetEventData(event ?? null, 'GET_ELEMENT_AT_CURSOR_' + selector, () => {\n                if (!startFrom) {\n                    const position = this.getFocusedPosition();\n                    startFrom = position?.node;\n                }\n                return (\n                    startFrom && this.getDOMHelper().findClosestElementAncestor(startFrom, selector)\n                );\n            }) ?? null\n        );\n    }\n\n    /**\n     * Check if this position is at beginning of the editor.\n     * This will return true if all nodes between the beginning of target node and the position are empty.\n     * @param position The position to check\n     * @returns True if position is at beginning of the editor, otherwise false\n     */\n    isPositionAtBeginning(position: NodePosition): boolean {\n        return isPositionAtBeginningOf(position, this.getCore().logicalRoot);\n    }\n\n    /**\n     * Get impacted regions from selection\n     */\n    getSelectedRegions(type: RegionType | CompatibleRegionType = RegionType.Table): Region[] {\n        const selection = this.getSelectionRangeEx();\n        const result: Region[] = [];\n        const logicalRoot = this.getCore().logicalRoot;\n        selection.ranges.forEach(range => {\n            result.push(...(range ? getRegionsFromRange(logicalRoot, range, type) : []));\n        });\n        return result.filter((value, index, self) => {\n            return self.indexOf(value) === index;\n        });\n    }\n\n    //#endregion\n\n    //#region EVENT API\n\n    addDomEventHandler(\n        nameOrMap: string | Record<string, DOMEventHandler>,\n        handler?: DOMEventHandler\n    ): () => void {\n        const eventsMap = typeof nameOrMap == 'string' ? { [nameOrMap]: handler! } : nameOrMap;\n        const eventsMapResult: Record<string, DOMEventRecord> = {};\n\n        getObjectKeys(eventsMap).forEach(key => {\n            const handlerObj = eventsMap[key];\n            let result: DOMEventRecord = {\n                pluginEventType: null,\n                beforeDispatch: null,\n            };\n\n            if (typeof handlerObj === 'number') {\n                result.pluginEventType = OldEventTypeToNewEventType[handlerObj as PluginEventType];\n            } else if (typeof handlerObj === 'function') {\n                result.beforeDispatch = handlerObj;\n            } else if (typeof handlerObj === 'object') {\n                const record = handlerObj as DOMEventHandlerObject;\n                result = {\n                    beforeDispatch: record.beforeDispatch,\n                    pluginEventType:\n                        typeof record.pluginEventType == 'number'\n                            ? OldEventTypeToNewEventType[record.pluginEventType]\n                            : undefined,\n                };\n            }\n\n            eventsMapResult[key] = result;\n        });\n\n        return this.attachDomEvent(eventsMapResult);\n    }\n\n    /**\n     * Trigger an event to be dispatched to all plugins\n     * @param eventType Type of the event\n     * @param data data of the event with given type, this is the rest part of PluginEvent with the given type\n     * @param broadcast indicates if the event needs to be dispatched to all plugins\n     * True means to all, false means to allow exclusive handling from one plugin unless no one wants that\n     * @returns the event object which is really passed into plugins. Some plugin may modify the event object so\n     * the result of this function provides a chance to read the modified result\n     */\n    public triggerPluginEvent<T extends PluginEventType | CompatiblePluginEventType>(\n        eventType: T,\n        data: PluginEventData<T>,\n        broadcast: boolean = false\n    ): PluginEventFromType<T> {\n        const oldEvent = {\n            eventType,\n            ...data,\n        } as PluginEvent;\n        const newEvent = oldEventToNewEvent(oldEvent);\n        const core = this.getCore();\n\n        if (newEvent) {\n            core.api.triggerEvent(core, newEvent, broadcast);\n            return (newEventToOldEvent(newEvent, oldEvent) ?? oldEvent) as PluginEventFromType<T>;\n        } else {\n            return oldEvent as PluginEventFromType<T>;\n        }\n    }\n\n    /**\n     * Trigger a ContentChangedEvent\n     * @param source Source of this event, by default is 'SetContent'\n     * @param data additional data for this event\n     */\n    triggerContentChangedEvent(\n        source: ChangeSource | CompatibleChangeSource | string = ChangeSource.SetContent,\n        data?: any\n    ) {\n        this.triggerPluginEvent(PluginEventType.ContentChanged, {\n            source,\n            data,\n        });\n    }\n\n    //#endregion\n\n    //#region Undo API\n\n    /**\n     * Undo last edit operation\n     */\n    undo() {\n        undo(this);\n    }\n\n    /**\n     * Redo next edit operation\n     */\n    redo() {\n        redo(this);\n    }\n\n    /**\n     * Add undo snapshot, and execute a format callback function, then add another undo snapshot, then trigger\n     * ContentChangedEvent with given change source.\n     * If this function is called nested, undo snapshot will only be added in the outside one\n     * @param callback The callback function to perform formatting, returns a data object which will be used as\n     * the data field in ContentChangedEvent if changeSource is not null.\n     * @param changeSource The change source to use when fire ContentChangedEvent. When the value is not null,\n     * a ContentChangedEvent will be fired with change source equal to this value\n     * @param canUndoByBackspace True if this action can be undone when user press Backspace key (aka Auto Complete).\n     */\n    addUndoSnapshot(\n        callback?: (start: NodePosition | null, end: NodePosition | null) => any,\n        changeSource?: ChangeSource | CompatibleChangeSource | string,\n        canUndoByBackspace?: boolean,\n        additionalData?: ContentChangedData\n    ) {\n        const core = this.getCore();\n        const undoState = core.undo;\n        const isNested = undoState.isNested;\n        let data: any;\n\n        if (!isNested) {\n            undoState.isNested = true;\n\n            // When there is getEntityState, it means this is triggered by an entity change.\n            // So if HTML content is not changed (hasNewContent is false), no need to add another snapshot before change\n            if (\n                core.undo.snapshotsManager.hasNewContent ||\n                !additionalData?.getEntityState ||\n                !callback\n            ) {\n                core.api.addUndoSnapshot(\n                    core,\n                    !!canUndoByBackspace,\n                    additionalData?.getEntityState?.()\n                );\n            }\n        }\n\n        try {\n            if (callback) {\n                const selection = core.api.getDOMSelection(core);\n                const range = selection?.type == 'range' ? selection.range : null;\n                data = callback(\n                    range && Position.getStart(range).normalize(),\n                    range && Position.getEnd(range).normalize()\n                );\n\n                if (!isNested) {\n                    const entityStates = additionalData?.getEntityState?.();\n\n                    core.api.addUndoSnapshot(core, false /*isAutoCompleteSnapshot*/, entityStates);\n                }\n            }\n        } finally {\n            if (!isNested) {\n                undoState.isNested = false;\n            }\n        }\n\n        if (callback && changeSource) {\n            const event: ContentChangedEvent = {\n                eventType: PluginEventType.ContentChanged,\n                source: changeSource,\n                data: data,\n                additionalData,\n            };\n            this.triggerPluginEvent(PluginEventType.ContentChanged, event, true /*broadcast*/);\n        }\n\n        if (canUndoByBackspace) {\n            const selection = core.api.getDOMSelection(core);\n\n            if (selection?.type == 'range') {\n                core.undo.snapshotsManager.hasNewContent = false;\n                core.undo.autoCompleteInsertPoint = {\n                    node: selection.range.startContainer,\n                    offset: selection.range.startOffset,\n                };\n            }\n        }\n    }\n\n    /**\n     * Whether there is an available undo/redo snapshot\n     */\n    getUndoState(): EditorUndoState {\n        const { snapshotsManager } = this.getCore().undo;\n        return {\n            canUndo:\n                snapshotsManager.hasNewContent || snapshotsManager.canMove(-1 /*previousSnapshot*/),\n            canRedo: snapshotsManager.canMove(1 /*nextSnapshot*/),\n        };\n    }\n\n    //#endregion\n\n    //#region Misc\n\n    /**\n     * Get custom data related to this editor\n     * @param key Key of the custom data\n     * @param getter Getter function. If custom data for the given key doesn't exist,\n     * call this function to get one and store it if it is specified. Otherwise return undefined\n     * @param disposer An optional disposer function to dispose this custom data when\n     * dispose editor.\n     */\n    getCustomData<T>(key: string, getter?: () => T, disposer?: (value: T) => void): T {\n        const core = this.getContentModelEditorCore();\n        return (core.customData[key] = core.customData[key] || {\n            value: getter ? getter() : undefined,\n            disposer,\n        }).value as T;\n    }\n\n    /**\n     * Get default format of this editor\n     * @returns Default format object of this editor\n     */\n    getDefaultFormat(): DefaultFormat {\n        const format = this.getCore().format.defaultFormat;\n\n        return {\n            bold: isBold(format.fontWeight),\n            italic: format.italic,\n            underline: format.underline,\n            fontFamily: format.fontFamily,\n            fontSize: format.fontSize,\n            textColor: format.textColor,\n            backgroundColor: format.backgroundColor,\n        };\n    }\n\n    /**\n     * Get a content traverser for the whole editor\n     * @param startNode The node to start from. If not passed, it will start from the beginning of the body\n     */\n    getBodyTraverser(startNode?: Node): IContentTraverser {\n        return ContentTraverser.createBodyTraverser(this.getCore().logicalRoot, startNode);\n    }\n\n    /**\n     * Get a content traverser for current selection\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    getSelectionTraverser(range?: Range): IContentTraverser | null {\n        range = range ?? this.getSelectionRange() ?? undefined;\n        return range\n            ? ContentTraverser.createSelectionTraverser(this.getCore().logicalRoot, range)\n            : null;\n    }\n\n    /**\n     * Get a content traverser for current block element start from specified position\n     * @param startFrom Start position of the traverser. Default value is ContentPosition.SelectionStart\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    getBlockTraverser(\n        startFrom: ContentPosition | CompatibleContentPosition = ContentPosition.SelectionStart\n    ): IContentTraverser | null {\n        const range = this.getSelectionRange();\n        return range\n            ? ContentTraverser.createBlockTraverser(this.getCore().logicalRoot, range, startFrom)\n            : null;\n    }\n\n    /**\n     * Get a text traverser of current selection\n     * @param event Optional, if specified, editor will try to get cached result from the event object first.\n     * If it is not cached before, query from DOM and cache the result into the event object\n     * @returns A content traverser, or null if editor never got focus before\n     */\n    getContentSearcherOfCursor(event?: PluginEvent): IPositionContentSearcher | null {\n        return cacheGetEventData(event ?? null, 'ContentSearcher', () => {\n            const range = this.getSelectionRange();\n            return (\n                range &&\n                new PositionContentSearcher(this.getCore().logicalRoot, Position.getStart(range))\n            );\n        });\n    }\n\n    /**\n     * Run a callback function asynchronously\n     * @param callback The callback function to run\n     * @returns a function to cancel this async run\n     */\n    runAsync(callback: (editor: ILegacyEditor & IEditor) => void) {\n        const win = this.getCore().physicalRoot.ownerDocument.defaultView || window;\n        const handle = win.requestAnimationFrame(() => {\n            if (!this.isDisposed() && callback) {\n                callback(this);\n            }\n        });\n\n        return () => {\n            win.cancelAnimationFrame(handle);\n        };\n    }\n\n    /**\n     * Set DOM attribute of editor content DIV\n     * @param name Name of the attribute\n     * @param value Value of the attribute\n     */\n    setEditorDomAttribute(name: string, value: string | null) {\n        this.getDOMHelper().setDomAttribute(name, value);\n    }\n\n    /**\n     * Get DOM attribute of editor content DIV, null if there is no such attribute.\n     * @param name Name of the attribute\n     */\n    getEditorDomAttribute(name: string): string | null {\n        return this.getDOMHelper().getDomAttribute(name);\n    }\n\n    /**\n     * @deprecated Use getVisibleViewport() instead.\n     *\n     * Get current relative distance from top-left corner of the given element to top-left corner of editor content DIV.\n     * @param element The element to calculate from. If the given element is not in editor, return value will be null\n     * @param addScroll When pass true, The return value will also add scrollLeft and scrollTop if any. So the value\n     * may be different than what user is seeing from the view. When pass false, scroll position will be ignored.\n     * @returns An [x, y] array which contains the left and top distances, or null if the given element is not in editor.\n     */\n    getRelativeDistanceToEditor(element: HTMLElement, addScroll?: boolean): number[] | null {\n        if (this.contains(element)) {\n            const physicalRoot = this.getCore().physicalRoot;\n            const editorRect = physicalRoot.getBoundingClientRect();\n            const elementRect = element.getBoundingClientRect();\n\n            if (editorRect && elementRect) {\n                let x = elementRect.left - editorRect?.left;\n                let y = elementRect.top - editorRect?.top;\n\n                if (addScroll) {\n                    x += physicalRoot.scrollLeft;\n                    y += physicalRoot.scrollTop;\n                }\n\n                return [x, y];\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Add a Content Edit feature.\n     * @param feature The feature to add\n     */\n    addContentEditFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        const core = this.getContentModelEditorCore();\n        feature?.keys.forEach(key => {\n            const array = core.edit.features[key] || [];\n            array.push(feature);\n            core.edit.features[key] = array;\n        });\n    }\n\n    /**\n     * Remove a Content Edit feature.\n     * @param feature The feature to remove\n     */\n    removeContentEditFeature(feature: GenericContentEditFeature<PluginEvent>) {\n        const core = this.getContentModelEditorCore();\n        feature?.keys.forEach(key => {\n            const featureSet = core.edit.features[key];\n            const index = featureSet?.indexOf(feature) ?? -1;\n            if (index >= 0) {\n                core.edit.features[key].splice(index, 1);\n                if (core.edit.features[key].length < 1) {\n                    delete core.edit.features[key];\n                }\n            }\n        });\n    }\n\n    /**\n     * @deprecated\n     * Get style based format state from current selection, including font name/size and colors\n     */\n    getStyleBasedFormatState(): StyleBasedFormatState {\n        const format = this.retrieveFormatState();\n\n        return {\n            backgroundColor: format.backgroundColor,\n            direction: format.direction,\n            fontName: format.fontName,\n            fontSize: format.fontSize,\n            fontWeight: format.fontWeight,\n            lineHeight: format.lineHeight,\n            marginBottom: format.marginBottom,\n            marginTop: format.marginTop,\n            textAlign: format.textAlign,\n            textColor: format.textColor,\n        };\n    }\n\n    /**\n     * @deprecated\n     * Get the pendable format such as underline and bold\n     * @returns The pending format state\n     */\n    getPendableFormatState(): PendableFormatState {\n        const format = this.retrieveFormatState();\n\n        return {\n            isBold: format.isBold,\n            isItalic: format.isItalic,\n            isStrikeThrough: format.isStrikeThrough,\n            isSubscript: format.isSubscript,\n            isSuperscript: format.isSubscript,\n            isUnderline: format.isUnderline,\n        };\n    }\n\n    /**\n     * @deprecated\n     * Ensure user will type into a container element rather than into the editor content DIV directly\n     * @param position The position that user is about to type to\n     * @param keyboardEvent Optional keyboard event object\n     */\n    ensureTypeInContainer(position: NodePosition, keyboardEvent?: KeyboardEvent) {\n        // No OP\n    }\n\n    //#endregion\n\n    //#region Dark mode APIs\n\n    /**\n     * Transform the given node and all its child nodes to dark mode color if editor is in dark mode\n     * @param node The node to transform\n     * @param direction The transform direction. @default ColorTransformDirection.LightToDark\n     */\n    transformToDarkColor(\n        node: Node,\n        direction:\n            | ColorTransformDirection\n            | CompatibleColorTransformDirection = ColorTransformDirection.LightToDark\n    ) {\n        const core = this.getCore();\n\n        if (core.lifecycle.isDarkMode) {\n            transformColor(\n                node,\n                true /*includeSelf*/,\n                direction == ColorTransformDirection.DarkToLight ? 'darkToLight' : 'lightToDark',\n                core.darkColorHandler\n            );\n        }\n    }\n\n    /**\n     * Check if the given experimental feature is enabled\n     * @param feature The feature to check\n     */\n    isFeatureEnabled(feature: ExperimentalFeatures | CompatibleExperimentalFeatures): boolean {\n        return (\n            this.getContentModelEditorCore().experimentalFeatures.indexOf(\n                feature as ExperimentalFeatures\n            ) >= 0\n        );\n    }\n\n    /**\n     * Get current zoom scale, default value is 1\n     * When editor is put under a zoomed container, need to pass the zoom scale number using EditorOptions.zoomScale\n     * to let editor behave correctly especially for those mouse drag/drop behaviors\n     * @returns current zoom scale number\n     */\n    getZoomScale(): number {\n        return this.getDOMHelper().calculateZoomScale();\n    }\n\n    /**\n     * Set current zoom scale, default value is 1\n     * When editor is put under a zoomed container, need to pass the zoom scale number using EditorOptions.zoomScale\n     * to let editor behave correctly especially for those mouse drag/drop behaviors\n     * @param scale The new scale number to set. It should be positive number and no greater than 10, otherwise it will be ignored.\n     */\n    setZoomScale(scale: number): void {\n        if (scale > 0 && scale <= 10) {\n            const oldValue = this.getZoomScale();\n\n            if (oldValue != scale) {\n                this.triggerEvent(\n                    'zoomChanged',\n                    {\n                        newZoomScale: scale,\n                    },\n                    true /*broadcast*/\n                );\n            }\n        }\n    }\n\n    /**\n     * @deprecated Use getZoomScale() instead\n     */\n    getSizeTransformer(): SizeTransformer {\n        return this.getContentModelEditorCore().sizeTransformer;\n    }\n\n    /**\n     * Get a darkColorHandler object for this editor.\n     */\n    getDarkColorHandler(): DarkColorHandler {\n        const core = this.getContentModelEditorCore();\n        return core.darkColorHandler;\n    }\n\n    /**\n     * Check if editor is in IME input sequence\n     * @returns True if editor is in IME input sequence, otherwise false\n     */\n    isInIME(): boolean {\n        return this.getCore().domEvent.isInIME;\n    }\n\n    private retrieveFormatState(): ContentModelFormatState {\n        const pendingFormat = this.getPendingFormat();\n        const result: ContentModelFormatState = {};\n\n        this.formatContentModel(model => {\n            retrieveModelFormatState(model, pendingFormat, result);\n\n            return false;\n        });\n\n        return result;\n    }\n\n    /**\n     * @returns the current EditorAdapterCore object\n     * @throws a standard Error if there's no core object\n     */\n    private getContentModelEditorCore(): EditorAdapterCore {\n        if (!this.contentModelEditorCore) {\n            throw new Error('Editor is already disposed');\n        }\n\n        return this.contentModelEditorCore;\n    }\n}\n","/**\n * Name of plugins to be ignored.\n * Plugins with these names will not be added into editor\n */\nexport const IgnoredPluginNames = [\n    'TableCellSelection', // Ignore TableCellSelection plugin since its functionality is already integrated into SelectionPlugin\n];\n","import { createRange, safeInstanceOf } from 'roosterjs-editor-dom';\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type {\n    NodePosition,\n    PositionType,\n    SelectionPath,\n    SelectionRangeEx,\n    TableSelection,\n} from 'roosterjs-editor-types';\n\n/**\n * @internal\n */\nexport function buildRangeEx(\n    root: HTMLElement,\n    arg1: Range | SelectionRangeEx | NodePosition | Node | SelectionPath | null,\n    arg2?: NodePosition | number | PositionType | TableSelection | null,\n    arg3?: Node,\n    arg4?: number | PositionType\n): SelectionRangeEx {\n    let rangeEx: SelectionRangeEx | null = null;\n\n    if (isSelectionRangeEx(arg1)) {\n        rangeEx = arg1;\n    } else if (safeInstanceOf(arg1, 'HTMLTableElement') && isTableSelectionOrNull(arg2)) {\n        rangeEx = {\n            type: SelectionRangeTypes.TableSelection,\n            ranges: [],\n            areAllCollapsed: false,\n            table: arg1,\n            coordinates: arg2 ?? undefined,\n        };\n    } else if (safeInstanceOf(arg1, 'HTMLImageElement') && typeof arg2 == 'undefined') {\n        rangeEx = {\n            type: SelectionRangeTypes.ImageSelection,\n            ranges: [],\n            areAllCollapsed: false,\n            image: arg1,\n        };\n    } else {\n        const range = !arg1\n            ? null\n            : safeInstanceOf(arg1, 'Range')\n            ? arg1\n            : isSelectionPath(arg1)\n            ? createRange(root, arg1.start, arg1.end)\n            : isNodePosition(arg1) || safeInstanceOf(arg1, 'Node')\n            ? createRange(\n                  <Node>arg1,\n                  <number | PositionType>arg2,\n                  <Node>arg3,\n                  <number | PositionType>arg4\n              )\n            : null;\n\n        rangeEx = range\n            ? {\n                  type: SelectionRangeTypes.Normal,\n                  ranges: [range],\n                  areAllCollapsed: range.collapsed,\n              }\n            : {\n                  type: SelectionRangeTypes.Normal,\n                  ranges: [],\n                  areAllCollapsed: true,\n              };\n    }\n\n    return rangeEx;\n}\n\nfunction isSelectionRangeEx(obj: any): obj is SelectionRangeEx {\n    const rangeEx = obj as SelectionRangeEx;\n    return (\n        rangeEx &&\n        typeof rangeEx == 'object' &&\n        typeof rangeEx.type == 'number' &&\n        Array.isArray(rangeEx.ranges)\n    );\n}\n\nfunction isTableSelectionOrNull(obj: any): obj is TableSelection | null {\n    const selection = obj as TableSelection | null;\n\n    return (\n        selection === null ||\n        (selection &&\n            typeof selection == 'object' &&\n            typeof selection.firstCell == 'object' &&\n            typeof selection.lastCell == 'object')\n    );\n}\n\nfunction isSelectionPath(obj: any): obj is SelectionPath {\n    const path = obj as SelectionPath;\n\n    return path && typeof path == 'object' && Array.isArray(path.start) && Array.isArray(path.end);\n}\n\nfunction isNodePosition(obj: any): obj is NodePosition {\n    const pos = obj as NodePosition;\n\n    return (\n        pos &&\n        typeof pos == 'object' &&\n        typeof pos.node == 'object' &&\n        typeof pos.offset == 'number'\n    );\n}\n","import { parseTableCells } from 'roosterjs-content-model-dom';\nimport type { TableSelection } from 'roosterjs-content-model-types';\n\n/**\n * @internal Export for test only\n * Create ranges from a table selection\n * @param selection The source table selection\n * @returns An array of DOM ranges of selected table cells\n */\nexport function createTableRanges(selection: TableSelection): Range[] {\n    const result: Range[] = [];\n    const { table, firstColumn, firstRow, lastColumn, lastRow } = selection;\n    const cells = parseTableCells(table);\n\n    for (let row = firstRow; row <= lastRow; row++) {\n        for (let col = firstColumn; col <= lastColumn; col++) {\n            const td = cells[row]?.[col];\n\n            if (typeof td == 'object') {\n                const range = table.ownerDocument.createRange();\n\n                range.selectNode(td);\n                result.push(range);\n            }\n        }\n    }\n\n    return result;\n}\n","import { convertDomSelectionToRangeEx, convertRangeExToDomSelection } from './selectionConverter';\nimport { createDefaultHtmlSanitizerOptions } from 'roosterjs-editor-dom';\nimport type { BeforePasteAdapterEvent } from '../../publicTypes/BeforePasteAdapterEvent';\nimport {\n    KnownAnnounceStrings as OldKnownAnnounceStrings,\n    PasteType as OldPasteType,\n    EntityOperation as OldEntityOperation,\n    PluginEventType,\n} from 'roosterjs-editor-types';\nimport type {\n    PluginEvent as OldEvent,\n    AnnounceData as OldAnnounceData,\n} from 'roosterjs-editor-types';\nimport type {\n    PluginEvent as NewEvent,\n    PasteType as NewPasteType,\n    AnnounceData as NewAnnounceData,\n    KnownAnnounceStrings as NewKnownAnnounceStrings,\n    EntityOperation as NewEntityOperation,\n    PluginEventType as NewPluginEventType,\n} from 'roosterjs-content-model-types';\n\nconst PasteTypeNewToOld: Record<NewPasteType, OldPasteType> = {\n    asImage: OldPasteType.AsImage,\n    asPlainText: OldPasteType.AsPlainText,\n    mergeFormat: OldPasteType.MergeFormat,\n    normal: OldPasteType.Normal,\n};\n\nconst PasteTypeOldToNew: Record<OldPasteType, NewPasteType> = {\n    [OldPasteType.AsImage]: 'asImage',\n    [OldPasteType.AsPlainText]: 'asPlainText',\n    [OldPasteType.MergeFormat]: 'mergeFormat',\n    [OldPasteType.Normal]: 'normal',\n};\n\nconst KnownAnnounceStringsOldToNew: Record<OldKnownAnnounceStrings, NewKnownAnnounceStrings> = {\n    [OldKnownAnnounceStrings.AnnounceListItemBullet]: 'announceListItemBullet',\n    [OldKnownAnnounceStrings.AnnounceListItemNumbering]: 'announceListItemNumbering',\n    [OldKnownAnnounceStrings.AnnounceOnFocusLastCell]: 'announceOnFocusLastCell',\n};\n\nconst KnownAnnounceStringsNewToOld: Record<NewKnownAnnounceStrings, OldKnownAnnounceStrings> = {\n    announceListItemBullet: OldKnownAnnounceStrings.AnnounceListItemBullet,\n    announceListItemNumbering: OldKnownAnnounceStrings.AnnounceListItemNumbering,\n    announceOnFocusLastCell: OldKnownAnnounceStrings.AnnounceOnFocusLastCell,\n};\n\nconst EntityOperationOldToNew: Record<OldEntityOperation, NewEntityOperation | undefined> = {\n    [OldEntityOperation.NewEntity]: 'newEntity',\n    [OldEntityOperation.Overwrite]: 'overwrite',\n    [OldEntityOperation.RemoveFromEnd]: 'removeFromEnd',\n    [OldEntityOperation.RemoveFromStart]: 'removeFromStart',\n    [OldEntityOperation.ReplaceTemporaryContent]: 'replaceTemporaryContent',\n    [OldEntityOperation.UpdateEntityState]: 'updateEntityState',\n    [OldEntityOperation.Click]: 'click',\n    [OldEntityOperation.ContextMenu]: undefined,\n    [OldEntityOperation.Escape]: undefined,\n    [OldEntityOperation.PartialOverwrite]: undefined,\n    [OldEntityOperation.AddShadowRoot]: undefined,\n    [OldEntityOperation.RemoveShadowRoot]: undefined,\n};\n\nconst EntityOperationNewToOld: Record<NewEntityOperation, OldEntityOperation | null> = {\n    newEntity: OldEntityOperation.NewEntity,\n    overwrite: OldEntityOperation.Overwrite,\n    removeFromEnd: OldEntityOperation.RemoveFromEnd,\n    removeFromStart: OldEntityOperation.RemoveFromStart,\n    replaceTemporaryContent: OldEntityOperation.ReplaceTemporaryContent,\n    updateEntityState: OldEntityOperation.UpdateEntityState,\n    snapshotEntityState: null,\n    click: OldEntityOperation.Click,\n};\n\n/**\n * @internal\n */\nexport const OldEventTypeToNewEventType: Record<PluginEventType, NewPluginEventType | undefined> = {\n    [PluginEventType.BeforeCutCopy]: 'beforeCutCopy',\n    [PluginEventType.BeforeDispose]: 'beforeDispose',\n    [PluginEventType.BeforeKeyboardEditing]: 'beforeKeyboardEditing',\n    [PluginEventType.BeforePaste]: 'beforePaste',\n    [PluginEventType.BeforeSetContent]: 'beforeSetContent',\n    [PluginEventType.CompositionEnd]: 'compositionEnd',\n    [PluginEventType.ContentChanged]: 'contentChanged',\n    [PluginEventType.ContextMenu]: 'contextMenu',\n    [PluginEventType.EditImage]: 'editImage',\n    [PluginEventType.EditorReady]: 'editorReady',\n    [PluginEventType.EnteredShadowEdit]: 'enteredShadowEdit',\n    [PluginEventType.EntityOperation]: 'entityOperation',\n    [PluginEventType.ExtractContentWithDom]: 'extractContentWithDom',\n    [PluginEventType.Input]: 'input',\n    [PluginEventType.KeyDown]: 'keyDown',\n    [PluginEventType.KeyPress]: 'keyPress',\n    [PluginEventType.KeyUp]: 'keyUp',\n    [PluginEventType.LeavingShadowEdit]: 'leavingShadowEdit',\n    [PluginEventType.MouseDown]: 'mouseDown',\n    [PluginEventType.MouseUp]: 'mouseUp',\n    [PluginEventType.PendingFormatStateChanged]: undefined,\n    [PluginEventType.Scroll]: 'scroll',\n    [PluginEventType.SelectionChanged]: 'selectionChanged',\n    [PluginEventType.ZoomChanged]: 'zoomChanged',\n};\n\n/**\n * @internal Convert legacy event object to new event object\n */\nexport function oldEventToNewEvent<TOldEvent extends OldEvent>(\n    input: TOldEvent,\n    refEvent?: NewEvent\n): NewEvent | undefined {\n    switch (input.eventType) {\n        case PluginEventType.BeforeCutCopy:\n            return {\n                eventType: 'beforeCutCopy',\n                clonedRoot: input.clonedRoot,\n                eventDataCache: input.eventDataCache,\n                isCut: input.isCut,\n                range: input.range,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.BeforeDispose:\n            return {\n                eventType: 'beforeDispose',\n                eventDataCache: input.eventDataCache,\n            };\n\n        case PluginEventType.BeforeKeyboardEditing:\n            return {\n                eventType: 'beforeKeyboardEditing',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.BeforePaste:\n            const refBeforePasteEvent = refEvent?.eventType == 'beforePaste' ? refEvent : undefined;\n            const cmBeforePasteEvent = input as BeforePasteAdapterEvent;\n\n            return {\n                eventType: 'beforePaste',\n                clipboardData: input.clipboardData,\n                customizedMerge:\n                    cmBeforePasteEvent.customizedMerge ?? refBeforePasteEvent?.customizedMerge,\n                domToModelOption: cmBeforePasteEvent.domToModelOption ??\n                    refBeforePasteEvent?.domToModelOption ?? {\n                        additionalAllowedTags: [],\n                        additionalDisallowedTags: [],\n                        additionalFormatParsers: {},\n                        formatParserOverride: {},\n                        processorOverride: {},\n                        styleSanitizers: {},\n                        attributeSanitizers: {},\n                    },\n                eventDataCache: input.eventDataCache,\n                fragment: input.fragment,\n                htmlAfter: input.htmlAfter,\n                htmlAttributes: input.htmlAttributes,\n                htmlBefore: input.htmlBefore,\n                pasteType: PasteTypeOldToNew[input.pasteType],\n            };\n\n        case PluginEventType.BeforeSetContent:\n            return {\n                eventType: 'beforeSetContent',\n                eventDataCache: input.eventDataCache,\n                newContent: input.newContent,\n            };\n\n        case PluginEventType.CompositionEnd:\n            return {\n                eventType: 'compositionEnd',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.ContentChanged:\n            const refContentChangedEvent =\n                refEvent?.eventType == 'contentChanged' ? refEvent : undefined;\n            return {\n                eventType: 'contentChanged',\n                eventDataCache: input.eventDataCache,\n                changedEntities: refContentChangedEvent?.changedEntities,\n                contentModel: refContentChangedEvent?.contentModel,\n                data: input.data,\n                entityStates:\n                    input.additionalData?.getEntityState?.() ??\n                    refContentChangedEvent?.entityStates,\n                selection: refContentChangedEvent?.selection,\n                source: input.source,\n                formatApiName:\n                    input.additionalData?.formatApiName ?? refContentChangedEvent?.formatApiName,\n                announceData:\n                    announceDataOldToNew(input.additionalData?.getAnnounceData?.()) ??\n                    refContentChangedEvent?.announceData,\n            };\n\n        case PluginEventType.ContextMenu:\n            return {\n                eventType: 'contextMenu',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                items: input.items,\n            };\n\n        case PluginEventType.EditImage:\n            return {\n                eventType: 'editImage',\n                eventDataCache: input.eventDataCache,\n                image: input.image,\n                newSrc: input.newSrc,\n                originalSrc: input.originalSrc,\n                previousSrc: input.previousSrc,\n            };\n\n        case PluginEventType.EditorReady:\n            return {\n                eventType: 'editorReady',\n                eventDataCache: input.eventDataCache,\n            };\n\n        case PluginEventType.EnteredShadowEdit:\n            return {\n                eventType: 'enteredShadowEdit',\n                eventDataCache: input.eventDataCache,\n            };\n\n        case PluginEventType.EntityOperation:\n            const operation = EntityOperationOldToNew[input.operation];\n\n            return operation === undefined\n                ? undefined\n                : {\n                      eventType: 'entityOperation',\n                      eventDataCache: input.eventDataCache,\n                      rawEvent: input.rawEvent,\n                      entity: input.entity,\n                      operation: operation,\n                      shouldPersist: input.shouldPersist,\n                      state: input.state,\n                  };\n\n        case PluginEventType.ExtractContentWithDom:\n            return {\n                eventType: 'extractContentWithDom',\n                eventDataCache: input.eventDataCache,\n                clonedRoot: input.clonedRoot,\n            };\n\n        case PluginEventType.Input:\n            return {\n                eventType: 'input',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.KeyDown:\n        case PluginEventType.KeyPress:\n        case PluginEventType.KeyUp:\n            return {\n                eventType:\n                    input.eventType == PluginEventType.KeyDown\n                        ? 'keyDown'\n                        : input.eventType == PluginEventType.KeyPress\n                        ? 'keyPress'\n                        : 'keyUp',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.LeavingShadowEdit:\n            return {\n                eventType: 'leavingShadowEdit',\n                eventDataCache: input.eventDataCache,\n            };\n\n        case PluginEventType.MouseDown:\n            return {\n                eventType: 'mouseDown',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case PluginEventType.MouseUp:\n            return {\n                eventType: 'mouseUp',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                isClicking: input.isClicking,\n            };\n\n        case PluginEventType.Scroll:\n            return {\n                eventType: 'scroll',\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                scrollContainer: input.scrollContainer,\n            };\n\n        case PluginEventType.SelectionChanged:\n            const refSelectionChangedEvent =\n                refEvent?.eventType == 'selectionChanged' ? refEvent : undefined;\n\n            return {\n                eventType: 'selectionChanged',\n                eventDataCache: input.eventDataCache,\n                newSelection:\n                    refSelectionChangedEvent?.newSelection ??\n                    convertRangeExToDomSelection(input.selectionRangeEx),\n            };\n\n        case PluginEventType.ZoomChanged:\n            return {\n                eventType: 'zoomChanged',\n                eventDataCache: input.eventDataCache,\n                newZoomScale: input.newZoomScale,\n            };\n\n        default:\n            return undefined;\n    }\n}\n\n/**\n * @internal Convert new event object to legacy event object\n */\nexport function newEventToOldEvent(input: NewEvent, refEvent?: OldEvent): OldEvent | undefined {\n    switch (input.eventType) {\n        case 'beforeCutCopy':\n            return {\n                eventType: PluginEventType.BeforeCutCopy,\n                clonedRoot: input.clonedRoot,\n                eventDataCache: input.eventDataCache,\n                isCut: input.isCut,\n                range: input.range,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'beforeDispose':\n            return {\n                eventType: PluginEventType.BeforeDispose,\n                eventDataCache: input.eventDataCache,\n            };\n\n        case 'beforeKeyboardEditing':\n            return {\n                eventType: PluginEventType.BeforeKeyboardEditing,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'beforePaste':\n            const refBeforePasteEvent =\n                refEvent?.eventType == PluginEventType.BeforePaste ? refEvent : undefined;\n\n            const oldBeforePasteEvent: BeforePasteAdapterEvent = {\n                eventType: PluginEventType.BeforePaste,\n                clipboardData: input.clipboardData,\n                eventDataCache: input.eventDataCache,\n                fragment: input.fragment,\n                htmlAfter: input.htmlAfter,\n                htmlAttributes: input.htmlAttributes,\n                htmlBefore: input.htmlBefore,\n                pasteType: PasteTypeNewToOld[input.pasteType],\n                sanitizingOption:\n                    refBeforePasteEvent?.sanitizingOption ?? createDefaultHtmlSanitizerOptions(),\n                domToModelOption: input.domToModelOption,\n                customizedMerge: input.customizedMerge,\n            };\n\n            return oldBeforePasteEvent;\n\n        case 'beforeSetContent':\n            return {\n                eventType: PluginEventType.BeforeSetContent,\n                eventDataCache: input.eventDataCache,\n                newContent: input.newContent,\n            };\n\n        case 'compositionEnd':\n            return {\n                eventType: PluginEventType.CompositionEnd,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'contentChanged':\n            const entityStates = input.entityStates;\n\n            return {\n                eventType: PluginEventType.ContentChanged,\n                eventDataCache: input.eventDataCache,\n                data: input.data,\n                source: input.source,\n                additionalData: {\n                    formatApiName: input.formatApiName,\n                    getAnnounceData: input.announceData\n                        ? () => announceDataNewToOld(input.announceData)\n                        : undefined,\n                    getEntityState: entityStates ? () => entityStates : undefined,\n                },\n            };\n\n        case 'contextMenu':\n            return {\n                eventType: PluginEventType.ContextMenu,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                items: input.items,\n            };\n\n        case 'editImage':\n            return {\n                eventType: PluginEventType.EditImage,\n                eventDataCache: input.eventDataCache,\n                image: input.image,\n                newSrc: input.newSrc,\n                originalSrc: input.originalSrc,\n                previousSrc: input.previousSrc,\n            };\n\n        case 'editorReady':\n            return {\n                eventType: PluginEventType.EditorReady,\n                eventDataCache: input.eventDataCache,\n            };\n\n        case 'enteredShadowEdit':\n            const refEnteredShadowEditEvent =\n                refEvent?.eventType == PluginEventType.EnteredShadowEdit ? refEvent : undefined;\n\n            return {\n                eventType: PluginEventType.EnteredShadowEdit,\n                eventDataCache: input.eventDataCache,\n                fragment: refEnteredShadowEditEvent?.fragment ?? document.createDocumentFragment(),\n                selectionPath: refEnteredShadowEditEvent?.selectionPath ?? {\n                    end: [],\n                    start: [],\n                },\n            };\n\n        case 'entityOperation':\n            const oldOperation = EntityOperationNewToOld[input.operation];\n            if (oldOperation !== null) {\n                return {\n                    eventType: PluginEventType.EntityOperation,\n                    eventDataCache: input.eventDataCache,\n                    rawEvent: input.rawEvent,\n                    entity: input.entity,\n                    operation: oldOperation,\n                    shouldPersist: input.shouldPersist,\n                    state: input.state,\n                };\n            } else {\n                return undefined;\n            }\n\n        case 'extractContentWithDom':\n            return {\n                eventType: PluginEventType.ExtractContentWithDom,\n                eventDataCache: input.eventDataCache,\n                clonedRoot: input.clonedRoot,\n            };\n\n        case 'input':\n            return {\n                eventType: PluginEventType.Input,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'keyDown':\n        case 'keyPress':\n        case 'keyUp':\n            return {\n                eventType:\n                    input.eventType == 'keyDown'\n                        ? PluginEventType.KeyDown\n                        : input.eventType == 'keyPress'\n                        ? PluginEventType.KeyPress\n                        : PluginEventType.KeyUp,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'leavingShadowEdit':\n            return {\n                eventType: PluginEventType.LeavingShadowEdit,\n                eventDataCache: input.eventDataCache,\n            };\n\n        case 'mouseDown':\n            return {\n                eventType: PluginEventType.MouseDown,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n            };\n\n        case 'mouseUp':\n            return {\n                eventType: PluginEventType.MouseUp,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                isClicking: input.isClicking,\n            };\n\n        case 'scroll':\n            return {\n                eventType: PluginEventType.Scroll,\n                eventDataCache: input.eventDataCache,\n                rawEvent: input.rawEvent,\n                scrollContainer: input.scrollContainer,\n            };\n\n        case 'selectionChanged':\n            const refSelectionChangedEvent =\n                refEvent?.eventType == PluginEventType.SelectionChanged ? refEvent : undefined;\n\n            return {\n                eventType: PluginEventType.SelectionChanged,\n                eventDataCache: input.eventDataCache,\n                selectionRangeEx:\n                    refSelectionChangedEvent?.selectionRangeEx ??\n                    convertDomSelectionToRangeEx(input.newSelection),\n            };\n\n        case 'zoomChanged':\n            return {\n                eventType: PluginEventType.ZoomChanged,\n                eventDataCache: input.eventDataCache,\n                newZoomScale: input.newZoomScale,\n                oldZoomScale:\n                    refEvent?.eventType == PluginEventType.ZoomChanged ? refEvent.oldZoomScale : 1, // In new ZoomChangedEvent we don't really have oldZoomScale. So if we can't get it, just use 1 instead\n            };\n\n        default:\n            return undefined;\n    }\n}\n\nfunction announceDataOldToNew(data: OldAnnounceData | undefined): NewAnnounceData | undefined {\n    return data\n        ? {\n              defaultStrings: data.defaultStrings\n                  ? KnownAnnounceStringsOldToNew[data.defaultStrings]\n                  : undefined,\n              formatStrings: data.formatStrings,\n              text: data.text,\n          }\n        : undefined;\n}\n\nfunction announceDataNewToOld(data: NewAnnounceData | undefined): OldAnnounceData | undefined {\n    return data\n        ? {\n              defaultStrings: data.defaultStrings\n                  ? KnownAnnounceStringsNewToOld[data.defaultStrings]\n                  : undefined,\n              formatStrings: data.formatStrings,\n              text: data.text,\n          }\n        : undefined;\n}\n","import { ContentPosition, NodeType, PositionType, RegionType } from 'roosterjs-editor-types';\nimport type { BlockElement, InsertOption, NodePosition } from 'roosterjs-editor-types';\nimport {\n    createRange,\n    getBlockElementAtNode,\n    getFirstLastBlockElement,\n    isBlockElement,\n    isVoidHtmlElement,\n    Position,\n    safeInstanceOf,\n    toArray,\n    wrap,\n    adjustInsertPosition,\n    getRegionsFromRange,\n    splitTextNode,\n    splitParentNode,\n} from 'roosterjs-editor-dom';\nimport type { DOMSelection } from 'roosterjs-content-model-types';\n\nfunction getInitialRange(\n    selection: DOMSelection | null,\n    option: InsertOption\n): { range: Range | null; rangeToRestore: Range | null } {\n    // Selection start replaces based on the current selection.\n    // Range inserts based on a provided range.\n    // Both have the potential to use the current selection to restore cursor position\n    // So in both cases we need to store the selection state.\n    let range = selection?.type == 'range' ? selection.range : null;\n    let rangeToRestore = null;\n\n    if (option.position == ContentPosition.Range) {\n        rangeToRestore = range;\n        range = option.range;\n    } else if (range) {\n        rangeToRestore = range.cloneRange();\n    }\n\n    return { range, rangeToRestore };\n}\n\n/**\n * @internal\n * Insert a DOM node into editor content\n */\nexport function insertNode(\n    contentDiv: HTMLDivElement,\n    selection: DOMSelection | null,\n    node: Node,\n    option: InsertOption\n): DOMSelection | undefined {\n    switch (option.position) {\n        case ContentPosition.Begin:\n        case ContentPosition.End: {\n            const isBegin = option.position == ContentPosition.Begin;\n            const block = getFirstLastBlockElement(contentDiv, isBegin);\n            let insertedNode: Node | Node[] | undefined;\n            if (block) {\n                const refNode = isBegin ? block.getStartNode() : block.getEndNode();\n                if (\n                    option.insertOnNewLine ||\n                    refNode.nodeType == NodeType.Text ||\n                    isVoidHtmlElement(refNode)\n                ) {\n                    // For insert on new line, or refNode is text or void html element (HR, BR etc.)\n                    // which cannot have children, i.e. <div>hello<br>world</div>. 'hello', 'world' are the\n                    // first and last node. Insert before 'hello' or after 'world', but still inside DIV\n                    if (safeInstanceOf(node, 'DocumentFragment')) {\n                        // if the node to be inserted is DocumentFragment, use its childNodes as insertedNode\n                        // because insertBefore() returns an empty DocumentFragment\n                        insertedNode = toArray(node.childNodes);\n                        refNode.parentNode?.insertBefore(\n                            node,\n                            isBegin ? refNode : refNode.nextSibling\n                        );\n                    } else {\n                        insertedNode = refNode.parentNode?.insertBefore(\n                            node,\n                            isBegin ? refNode : refNode.nextSibling\n                        );\n                    }\n                } else {\n                    // if the refNode can have child, use appendChild (which is like to insert as first/last child)\n                    // i.e. <div>hello</div>, the content will be inserted before/after hello\n                    insertedNode = refNode.insertBefore(node, isBegin ? refNode.firstChild : null);\n                }\n            } else {\n                // No first block, this can happen when editor is empty. Use appendChild to insert the content in contentDiv\n                insertedNode = contentDiv.appendChild(node);\n            }\n\n            // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\n            // add a DIV wrapping\n            if (insertedNode && option.insertOnNewLine) {\n                const nodes = Array.isArray(insertedNode) ? insertedNode : [insertedNode];\n                if (!isBlockElement(nodes[0]) || !isBlockElement(nodes[nodes.length - 1])) {\n                    wrap(nodes);\n                }\n            }\n\n            break;\n        }\n        case ContentPosition.DomEnd:\n            // Use appendChild to insert the node at the end of the content div.\n            const insertedNode = contentDiv.appendChild(node);\n            // Final check to see if the inserted node is a block. If not block and the ask is to insert on new line,\n            // add a DIV wrapping\n            if (insertedNode && option.insertOnNewLine && !isBlockElement(insertedNode)) {\n                wrap(insertedNode);\n            }\n            break;\n        case ContentPosition.Range:\n        case ContentPosition.SelectionStart:\n            let { range, rangeToRestore } = getInitialRange(selection, option);\n            if (!range) {\n                break;\n            }\n\n            // if to replace the selection and the selection is not collapsed, remove the the content at selection first\n            if (option.replaceSelection && !range.collapsed) {\n                range.deleteContents();\n            }\n\n            let pos: NodePosition = Position.getStart(range);\n            let blockElement: BlockElement | null;\n\n            if (option.insertOnNewLine && option.insertToRegionRoot) {\n                pos = adjustInsertPositionRegionRoot(contentDiv, range, pos);\n            } else if (\n                option.insertOnNewLine &&\n                (blockElement = getBlockElementAtNode(contentDiv, pos.normalize().node))\n            ) {\n                pos = adjustInsertPositionNewLine(blockElement, contentDiv, pos);\n            } else {\n                pos = adjustInsertPosition(contentDiv, node, pos, range);\n            }\n\n            const nodeForCursor =\n                node.nodeType == NodeType.DocumentFragment ? node.lastChild : node;\n\n            range = createRange(pos);\n            range.insertNode(node);\n\n            if (option.updateCursor && nodeForCursor) {\n                rangeToRestore = createRange(\n                    new Position(nodeForCursor, PositionType.After).normalize()\n                );\n            }\n\n            return rangeToRestore\n                ? {\n                      type: 'range',\n                      range: rangeToRestore,\n                      isReverted: false,\n                  }\n                : undefined;\n    }\n}\n\nfunction adjustInsertPositionRegionRoot(\n    contentDiv: HTMLDivElement,\n    range: Range,\n    position: NodePosition\n) {\n    const region = getRegionsFromRange(contentDiv, range, RegionType.Table)[0];\n    let node: Node | null = position.node;\n\n    if (region) {\n        if (node.nodeType == NodeType.Text && !position.isAtEnd) {\n            node = splitTextNode(node as Text, position.offset, true /*returnFirstPart*/);\n        }\n\n        if (node != region.rootNode) {\n            while (node && node.parentNode != region.rootNode) {\n                splitParentNode(node, false /*splitBefore*/);\n                node = node.parentNode;\n            }\n        }\n\n        if (node) {\n            position = new Position(node, PositionType.After);\n        }\n    }\n\n    return position;\n}\n\nfunction adjustInsertPositionNewLine(\n    blockElement: BlockElement,\n    contentDiv: HTMLDivElement,\n    pos: Position\n) {\n    let tempPos = new Position(blockElement.getEndNode(), PositionType.After);\n    if (safeInstanceOf(tempPos.node, 'HTMLTableRowElement')) {\n        const div = contentDiv.ownerDocument.createElement('div');\n        const range = createRange(pos);\n        range.insertNode(div);\n        tempPos = new Position(div, PositionType.Begin);\n    }\n    return tempPos;\n}\n","import { createRange } from 'roosterjs-editor-dom';\nimport { createTableRanges } from './createTableRanges';\nimport { SelectionRangeTypes } from 'roosterjs-editor-types';\nimport type { DOMSelection } from 'roosterjs-content-model-types';\nimport type { SelectionRangeEx } from 'roosterjs-editor-types';\n\n// In theory, all functions below are not necessary. We keep these functions here only for compatibility with old IEditor interface\n\n/**\n * @internal\n */\nexport function convertRangeExToDomSelection(\n    rangeEx: SelectionRangeEx | null\n): DOMSelection | null {\n    switch (rangeEx?.type) {\n        case SelectionRangeTypes.ImageSelection:\n            return {\n                type: 'image',\n                image: rangeEx.image,\n            };\n\n        case SelectionRangeTypes.Normal:\n            return rangeEx.ranges.length > 0\n                ? {\n                      type: 'range',\n                      range: rangeEx.ranges[0],\n                      isReverted: false,\n                  }\n                : null;\n\n        case SelectionRangeTypes.TableSelection:\n            return rangeEx.coordinates\n                ? {\n                      type: 'table',\n                      table: rangeEx.table,\n                      firstColumn: rangeEx.coordinates.firstCell.x,\n                      firstRow: rangeEx.coordinates.firstCell.y,\n                      lastColumn: rangeEx.coordinates.lastCell.x,\n                      lastRow: rangeEx.coordinates.lastCell.y,\n                  }\n                : null;\n\n        default:\n            return null;\n    }\n}\n\n/**\n * @internal\n */\nexport function convertDomSelectionToRangeEx(selection: DOMSelection | null): SelectionRangeEx {\n    switch (selection?.type) {\n        case 'image':\n            return {\n                type: SelectionRangeTypes.ImageSelection,\n                image: selection.image,\n                areAllCollapsed: false,\n                ranges: [createRange(selection.image)],\n            };\n\n        case 'range':\n            return {\n                type: SelectionRangeTypes.Normal,\n                ranges: [selection.range],\n                areAllCollapsed: selection.range.collapsed,\n            };\n\n        case 'table':\n            return {\n                type: SelectionRangeTypes.TableSelection,\n                ranges: createTableRanges(selection),\n                areAllCollapsed: false,\n                table: selection.table,\n                coordinates: {\n                    firstCell: { x: selection.firstColumn, y: selection.firstRow },\n                    lastCell: { x: selection.lastColumn, y: selection.lastRow },\n                },\n            };\n\n        default:\n            return {\n                type: SelectionRangeTypes.Normal,\n                ranges: [],\n                areAllCollapsed: true,\n            };\n    }\n}\n","module.exports = roosterjs;","module.exports = roosterjsLegacy;","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { EditorAdapterOptions } from './publicTypes/EditorAdapterOptions';\nexport { BeforePasteAdapterEvent } from './publicTypes/BeforePasteAdapterEvent';\n\nexport { EditorAdapter } from './editor/EditorAdapter';\n\nexport { IgnoredPluginNames } from './editor/IgnoredPluginNames';\n"],"names":["onInitialize","legacyPlugins","experimentalFeatures","editPlugin","createEditPlugin","this","filter","x","IgnoredPluginNames","indexOf","getName","edit","getState","contextMenuProviders","isContextMenuProvider","checkExclusivelyHandling","some","plugin","willHandleEventExclusively","initialize","editor","outerEditor","createEditorCore","forEach","dispose","i","length","event","cacheGetExclusivelyHandlePlugin","onPluginEvent","oldEvent","cacheGetOldEvent","exclusivelyHandleEventPlugin","Object","assign","oldEventToNewEvent","getContextMenuItems","target","allItems","provider","items","push","cacheGetEventData","newEventToOldEvent","customData","sizeTransformer","createSizeTransformer","darkColorHandler","createDarkColorHandler","getColorManager","size","getDOMHelper","calculateZoomScale","source","BridgePlugin","state","features","hasFunctionKey","ctrlOrMeta","isKeyDownEvent","eventType","rawEvent","range","getSelectionRange","isCtrlOrMetaPressed","altKey","which","collapsed","feature","allowFunctionKeys","shouldHandleEvent","handleEvent","handledByEditFeature","EditPlugin","VARIABLE_REGEX","innerHandler","getKnownColorsCopy","values","knownColors","registerColor","lightModeColor","isDarkMode","darkModeColor","colorKey","parsedColor","parseColorValue","key","replace","updateKnownColor","getDarkColor","reset","color","isInDarkMode","match","startsWith","exec","findLightColorFromDarkColor","darkColor","rgbSearch","parseColor","getObjectKeys","find","rgbCurrent","transformElementColor","element","fromDarkMode","toDarkMode","textColor","getColor","backColor","setColor","DarkColorHandlerImpl","GetContentModeMap","contentDiv","options","bridgePlugin","core","contentModelEditorCore","plugins","initContent","initialContent","innerHTML","initialModel","createModelFromHtml","defaultDomToModelOptions","trustedHTMLHandler","defaultSegmentFormat","standaloneEditorOptions","data","disposer","value","undefined","isDisposed","insertNode","node","option","position","insertOnNewLine","updateCursor","replaceSelection","insertToRegionRoot","physicalRoot","getCore","focus","parentNode","insertBefore","nextSibling","transformColor","selection","getDOMSelection","setDOMSelection","deleteNode","contains","removeChild","replaceNode","existingNode","toNode","transformColorForDarkMode","lifecycle","transformToDarkColor","replaceChild","getBlockElementAtNode","logicalRoot","arg","queryElements","selector","scopeOrCallback","callback","result","scope","Function","selectionEx","getSelectionRangeEx","ranges","collapseNodes","start","end","canSplitParent","isEmpty","trim","isNodeEmpty","getContent","mode","exportContent","environment","modelToDomSettings","customized","setContent","content","triggerContentChangedEvent","api","triggerEvent","newContent","newModel","domToModelSettings","format","defaultFormat","setContentModel","insertContent","doc","getDocument","body","DOMParser","parseFromString","allNodes","childNodes","toArray","wrap","createDocumentFragment","appendChild","deleteSelectedContent","paste","clipboardData","pasteAsText","applyCurrentFormat","pasteAsImage","tryGetFromCache","type","convertDomSelectionToRangeEx","getSelectionPath","select","arg1","arg2","arg3","arg4","rangeEx","buildRangeEx","convertRangeExToDomSelection","getFocusedPosition","sel","defaultView","getSelection","focusNode","Position","focusOffset","getStart","getElementAtCursor","startFrom","findClosestElementAncestor","isPositionAtBeginning","isPositionAtBeginningOf","getSelectedRegions","getRegionsFromRange","index","self","addDomEventHandler","nameOrMap","handler","eventsMap","eventsMapResult","handlerObj","pluginEventType","beforeDispatch","OldEventTypeToNewEventType","record","attachDomEvent","triggerPluginEvent","broadcast","newEvent","undo","redo","addUndoSnapshot","changeSource","canUndoByBackspace","additionalData","undoState","isNested","snapshotsManager","hasNewContent","getEntityState","normalize","getEnd","entityStates","autoCompleteInsertPoint","startContainer","offset","startOffset","getUndoState","canUndo","canMove","canRedo","getCustomData","getter","getContentModelEditorCore","getDefaultFormat","bold","isBold","fontWeight","italic","underline","fontFamily","fontSize","backgroundColor","getBodyTraverser","startNode","ContentTraverser","createBodyTraverser","getSelectionTraverser","createSelectionTraverser","getBlockTraverser","createBlockTraverser","getContentSearcherOfCursor","PositionContentSearcher","runAsync","win","ownerDocument","window","handle","requestAnimationFrame","cancelAnimationFrame","setEditorDomAttribute","name","setDomAttribute","getEditorDomAttribute","getDomAttribute","getRelativeDistanceToEditor","addScroll","editorRect","getBoundingClientRect","elementRect","left","y","top","scrollLeft","scrollTop","addContentEditFeature","keys","array","removeContentEditFeature","featureSet","splice","getStyleBasedFormatState","retrieveFormatState","direction","fontName","lineHeight","marginBottom","marginTop","textAlign","getPendableFormatState","isItalic","isStrikeThrough","isSubscript","isSuperscript","isUnderline","ensureTypeInContainer","keyboardEvent","isFeatureEnabled","getZoomScale","setZoomScale","scale","newZoomScale","getSizeTransformer","getDarkColorHandler","isInIME","domEvent","pendingFormat","getPendingFormat","formatContentModel","model","retrieveModelFormatState","Error","Editor","EditorAdapter","root","path","obj","Array","isArray","isSelectionRangeEx","safeInstanceOf","firstCell","lastCell","areAllCollapsed","table","coordinates","image","createRange","pos","isNodePosition","firstColumn","firstRow","lastColumn","lastRow","cells","parseTableCells","row","col","td","selectNode","PasteTypeNewToOld","asImage","asPlainText","mergeFormat","normal","PasteTypeOldToNew","KnownAnnounceStringsOldToNew","KnownAnnounceStringsNewToOld","announceListItemBullet","announceListItemNumbering","announceOnFocusLastCell","EntityOperationOldToNew","EntityOperationNewToOld","newEntity","overwrite","removeFromEnd","removeFromStart","replaceTemporaryContent","updateEntityState","snapshotEntityState","click","input","refEvent","clonedRoot","eventDataCache","isCut","refBeforePasteEvent","cmBeforePasteEvent","customizedMerge","domToModelOption","additionalAllowedTags","additionalDisallowedTags","additionalFormatParsers","formatParserOverride","processorOverride","styleSanitizers","attributeSanitizers","fragment","htmlAfter","htmlAttributes","htmlBefore","pasteType","refContentChangedEvent","changedEntities","contentModel","formatApiName","announceData","getAnnounceData","defaultStrings","formatStrings","text","newSrc","originalSrc","previousSrc","operation","entity","shouldPersist","isClicking","scrollContainer","refSelectionChangedEvent","newSelection","selectionRangeEx","sanitizingOption","createDefaultHtmlSanitizerOptions","refEnteredShadowEditEvent","document","selectionPath","oldOperation","oldZoomScale","isBegin","block","getFirstLastBlockElement","refNode","getStartNode","getEndNode","nodeType","isVoidHtmlElement","firstChild","nodes","isBlockElement","insertedNode","rangeToRestore","cloneRange","getInitialRange","deleteContents","blockElement","region","isAtEnd","splitTextNode","rootNode","splitParentNode","adjustInsertPositionRegionRoot","tempPos","div","createElement","adjustInsertPositionNewLine","adjustInsertPosition","nodeForCursor","lastChild","isReverted","createTableRanges","module","exports","roosterjs","roosterjsLegacy","extendStatics","d","b","setPrototypeOf","__proto__","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","__assign","t","s","n","arguments","apply","__rest","e","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","_","kind","descriptor","done","context","access","addInitializer","get","set","init","unshift","__runInitializers","thisArg","useValue","__propKey","concat","__setFunctionName","prefix","description","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","__generator","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","__esModule","writable","enumerable","__exportStar","__values","__read","ar","error","__spread","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","has","__classPrivateFieldSet","__classPrivateFieldIn","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","toStringTag"],"sourceRoot":""}