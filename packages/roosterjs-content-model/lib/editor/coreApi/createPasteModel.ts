import ContentModelBeforePasteEvent from '../../publicTypes/event/ContentModelBeforePasteEvent';
import domToContentModel from '../../domToModel/domToContentModel';
import { ClipboardData, EditorCore, NodePosition, PluginEventType } from 'roosterjs-editor-types';
import { ContentModelEditorCore, CreatePasteModel } from '../../publicTypes/ContentModelEditorCore';
import {
    createDefaultHtmlSanitizerOptions,
    createFragmentFromClipboardData,
} from 'roosterjs-editor-dom';

export const createPasteModel: CreatePasteModel = (
    core: ContentModelEditorCore,
    clipboardData: ClipboardData,
    position: NodePosition | null,
    pasteAsText: boolean,
    applyCurrentStyle: boolean,
    pasteAsImage: boolean = false
) => {
    // Step 1: Prepare BeforePasteEvent object
    const event = createBeforePasteEvent(core, clipboardData);

    const fragment = createFragmentFromClipboardData(
        core,
        clipboardData,
        position,
        pasteAsText,
        applyCurrentStyle,
        pasteAsImage,
        event
    );

    return domToContentModel(fragment, core.api.createEditorContext(core), event.domToModelOption);
};

function createBeforePasteEvent(
    core: EditorCore,
    clipboardData: ClipboardData
): ContentModelBeforePasteEvent {
    const options = createDefaultHtmlSanitizerOptions();

    // Remove "caret-color" style generated by Safari to make sure caret shows in right color after paste
    options.cssStyleCallbacks['caret-color'] = () => false;

    return {
        eventType: PluginEventType.BeforePaste,
        clipboardData,
        fragment: core.contentDiv.ownerDocument.createDocumentFragment(),
        sanitizingOption: options,
        htmlBefore: '',
        htmlAfter: '',
        htmlAttributes: {},
        domToModelOption: {},
    };
}
